package view;

import static controller.Calendario.createScheduleCalendar;
import static controller.Cliente.createNewClient;
import controller.Consulta;
import dao.DaoFuncionario;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Consultas;

/**
 *
 * @author elias
 */
public class FrmMain extends javax.swing.JFrame {

    String itemSelected = "inicio";
    ArrayList<Consultas> pro = new ArrayList<>();
    public static int selectedYear;
    public static int selectedMonth;
    public static int selectedDay;
    public static int days;
    public static String inicioDoMes;
    public static String fimDoMes;

    public FrmMain() {
        initComponents();

        MudarPainel(pnlCalendar);

        setHome();

        Calendar calendar = new GregorianCalendar();
        FrmMain.selectedDay = calendar.get(Calendar.DAY_OF_MONTH);
        FrmMain.selectedMonth = calendar.get(Calendar.MONTH);
        FrmMain.selectedYear = calendar.get(Calendar.YEAR);

        GregorianCalendar gCalendar = new GregorianCalendar(selectedYear, selectedMonth, 1);
        days = gCalendar.getActualMaximum(Calendar.DATE);
        inicioDoMes = selectedYear + "-" + (selectedMonth + 1) + "-01" + " 08:30:00";
        fimDoMes = selectedYear + "-" + (selectedMonth + 1) + "-" + days + " 17:30:00";
    }

    private JPanel setHome() {
        try {
            pnlCalendar.add(createScheduleCalendar());
        } catch (ParseException ex) {
            System.out.println("Ocorreu um erro ao tentar renderizar o calendário: zn" + ex);
        }
        return pnlCalendar;
    }

    public void MudarPainel(JPanel panel) {
        jlpPaneis.removeAll();
        jlpPaneis.add(panel);
        jlpPaneis.repaint();
        jlpPaneis.revalidate();
    }

    //SET COLOR HOVER
    private void yesHover(JLabel icon, JLabel text) {
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
        icon.setBackground(new Color(69, 30, 183));
        icon.setOpaque(true);
        text.setBackground(new Color(69, 30, 183));
        text.setOpaque(true);
    }

    //UNSET COLOR HOEVR
    private void noHover(JLabel icon, JLabel text) {
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        icon.setBackground(new Color(27, 83, 231));
        icon.setOpaque(true);
        text.setBackground(new Color(27, 83, 231));
        text.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_Fundo = new javax.swing.JPanel();
        pnlOption = new javax.swing.JPanel();
        linha = new javax.swing.JSeparator();
        lblUserPhoto = new javax.swing.JLabel();
        lblExit = new javax.swing.JLabel();
        lblExitIcon = new javax.swing.JLabel();
        lblHome = new javax.swing.JLabel();
        lblHomeIcon = new javax.swing.JLabel();
        lblConsulta = new javax.swing.JLabel();
        lblConsultaIcon = new javax.swing.JLabel();
        lblNovoIcon = new javax.swing.JLabel();
        lblNovo = new javax.swing.JLabel();
        lblBackupIcon = new javax.swing.JLabel();
        lblBackup = new javax.swing.JLabel();
        jlpPaneis = new javax.swing.JLayeredPane();
        pnlCalendar = new javax.swing.JPanel();
        pnl_Canto_Direito = new javax.swing.JPanel();
        lbl_Canto_Icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FrmMain");
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_Fundo.setBackground(new java.awt.Color(254, 254, 254));
        pnl_Fundo.setLayout(null);

        pnlOption.setBackground(new java.awt.Color(27, 83, 231));
        pnlOption.setLayout(null);
        pnlOption.add(linha);
        linha.setBounds(20, 90, 130, 10);

        lblUserPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        pnlOption.add(lblUserPhoto);
        lblUserPhoto.setBounds(0, 0, 170, 90);

        lblExit.setBackground(new java.awt.Color(255, 0, 0));
        lblExit.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblExit.setForeground(new java.awt.Color(255, 255, 255));
        lblExit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblExit.setText("  Sair");
        lblExit.setToolTipText("");
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblExitMouseExited(evt);
            }
        });
        pnlOption.add(lblExit);
        lblExit.setBounds(50, 550, 120, 50);

        lblExitIcon.setBackground(new java.awt.Color(255, 0, 0));
        lblExitIcon.setForeground(new java.awt.Color(255, 255, 255));
        lblExitIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExitIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        lblExitIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblExitIconMouseExited(evt);
            }
        });
        pnlOption.add(lblExitIcon);
        lblExitIcon.setBounds(0, 550, 50, 50);

        lblHome.setBackground(new java.awt.Color(69, 30, 183));
        lblHome.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblHome.setForeground(new java.awt.Color(254, 254, 254));
        lblHome.setText("  Início");
        lblHome.setToolTipText("");
        lblHome.setOpaque(true);
        lblHome.setPreferredSize(new java.awt.Dimension(64, 25));
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblHomeMouseExited(evt);
            }
        });
        pnlOption.add(lblHome);
        lblHome.setBounds(50, 225, 138, 43);

        lblHomeIcon.setBackground(new java.awt.Color(69, 30, 183));
        lblHomeIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHomeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N
        lblHomeIcon.setOpaque(true);
        lblHomeIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblHomeIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblHomeIconMouseExited(evt);
            }
        });
        pnlOption.add(lblHomeIcon);
        lblHomeIcon.setBounds(0, 225, 50, 43);

        lblConsulta.setBackground(new java.awt.Color(27, 83, 231));
        lblConsulta.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblConsulta.setForeground(new java.awt.Color(254, 254, 254));
        lblConsulta.setText("  Consulta");
        lblConsulta.setToolTipText("");
        lblConsulta.setOpaque(true);
        lblConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConsultaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConsultaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConsultaMouseExited(evt);
            }
        });
        pnlOption.add(lblConsulta);
        lblConsulta.setBounds(50, 275, 138, 43);

        lblConsultaIcon.setBackground(new java.awt.Color(27, 83, 231));
        lblConsultaIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConsultaIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agenda.png"))); // NOI18N
        lblConsultaIcon.setOpaque(true);
        lblConsultaIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConsultaIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConsultaIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConsultaIconMouseExited(evt);
            }
        });
        pnlOption.add(lblConsultaIcon);
        lblConsultaIcon.setBounds(0, 275, 50, 43);

        lblNovoIcon.setBackground(new java.awt.Color(27, 83, 231));
        lblNovoIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNovoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user-add.png"))); // NOI18N
        lblNovoIcon.setOpaque(true);
        lblNovoIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNovoIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNovoIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNovoIconMouseExited(evt);
            }
        });
        pnlOption.add(lblNovoIcon);
        lblNovoIcon.setBounds(0, 325, 50, 43);

        lblNovo.setBackground(new java.awt.Color(27, 83, 231));
        lblNovo.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblNovo.setForeground(new java.awt.Color(254, 254, 254));
        lblNovo.setText("  Cadastrar");
        lblNovo.setToolTipText("");
        lblNovo.setOpaque(true);
        lblNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNovoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNovoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNovoMouseExited(evt);
            }
        });
        pnlOption.add(lblNovo);
        lblNovo.setBounds(50, 325, 138, 43);

        lblBackupIcon.setBackground(new java.awt.Color(27, 83, 231));
        lblBackupIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBackupIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backup.png"))); // NOI18N
        lblBackupIcon.setOpaque(true);
        lblBackupIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackupIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackupIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackupIconMouseExited(evt);
            }
        });
        pnlOption.add(lblBackupIcon);
        lblBackupIcon.setBounds(0, 375, 50, 43);

        lblBackup.setBackground(new java.awt.Color(27, 83, 231));
        lblBackup.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblBackup.setForeground(new java.awt.Color(254, 254, 254));
        lblBackup.setText("  Backup");
        lblBackup.setToolTipText("");
        lblBackup.setOpaque(true);
        lblBackup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackupMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackupMouseExited(evt);
            }
        });
        pnlOption.add(lblBackup);
        lblBackup.setBounds(50, 375, 138, 43);

        pnl_Fundo.add(pnlOption);
        pnlOption.setBounds(0, 0, 170, 600);

        jlpPaneis.setMaximumSize(new java.awt.Dimension(730, 600));
        jlpPaneis.setPreferredSize(new java.awt.Dimension(730, 600));
        jlpPaneis.setLayout(new java.awt.CardLayout());

        pnlCalendar.setBackground(new java.awt.Color(254, 254, 254));
        pnlCalendar.setMaximumSize(new java.awt.Dimension(730, 600));
        pnlCalendar.setMinimumSize(new java.awt.Dimension(730, 600));
        pnlCalendar.setOpaque(false);
        pnlCalendar.setPreferredSize(new java.awt.Dimension(730, 600));

        javax.swing.GroupLayout pnlCalendarLayout = new javax.swing.GroupLayout(pnlCalendar);
        pnlCalendar.setLayout(pnlCalendarLayout);
        pnlCalendarLayout.setHorizontalGroup(
            pnlCalendarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        pnlCalendarLayout.setVerticalGroup(
            pnlCalendarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        jlpPaneis.add(pnlCalendar, "card3");

        pnl_Fundo.add(jlpPaneis);
        jlpPaneis.setBounds(170, 0, 730, 600);

        pnl_Canto_Direito.setBackground(new java.awt.Color(254, 254, 254));
        pnl_Canto_Direito.setOpaque(false);
        pnl_Canto_Direito.setPreferredSize(new java.awt.Dimension(502, 324));
        pnl_Canto_Direito.setLayout(null);

        lbl_Canto_Icon.setBackground(new java.awt.Color(27, 83, 231));
        lbl_Canto_Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fundo_canto_direito.png"))); // NOI18N
        pnl_Canto_Direito.add(lbl_Canto_Icon);
        lbl_Canto_Icon.setBounds(0, 0, 502, 324);

        pnl_Fundo.add(pnl_Canto_Direito);
        pnl_Canto_Direito.setBounds(398, 0, 502, 324);

        getContentPane().add(pnl_Fundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Side Menu - Home 
    private void lblHomeIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeIconMouseClicked
        itemSelected = "inicio";
        noHover(lblConsultaIcon, lblConsulta);
        noHover(lblNovoIcon, lblNovo);

        //Limpa Jpanel para colocar outro
        pnlCalendar.removeAll();
        pnlCalendar.revalidate();
        pnlCalendar.repaint();

        //Coloca conteudo
        MudarPainel(setHome());
    }//GEN-LAST:event_lblHomeIconMouseClicked

    private void lblHomeIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeIconMouseEntered
        yesHover(lblHomeIcon, lblHome);
    }//GEN-LAST:event_lblHomeIconMouseEntered

    private void lblHomeIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeIconMouseExited
        if (itemSelected.equals("inicio")) {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } else {
            noHover(lblHomeIcon, lblHome);
        }
    }//GEN-LAST:event_lblHomeIconMouseExited

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        itemSelected = "inicio";
        noHover(lblConsultaIcon, lblConsulta);
        noHover(lblNovoIcon, lblNovo);

        //Limpa Jpanel para colocar outro
        pnlCalendar.removeAll();
        pnlCalendar.revalidate();
        pnlCalendar.repaint();

        //Coloca conteudo
        MudarPainel(setHome());
    }//GEN-LAST:event_lblHomeMouseClicked

    private void lblHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseEntered
        yesHover(lblHomeIcon, lblHome);
    }//GEN-LAST:event_lblHomeMouseEntered

    private void lblHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseExited
        if (itemSelected.equals("inicio")) {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } else {
            noHover(lblHomeIcon, lblHome);
        }
    }//GEN-LAST:event_lblHomeMouseExited

    //Side Menu - Consulta
    private void lblConsultaIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultaIconMouseClicked
        itemSelected = "consulta";
        noHover(lblHomeIcon, lblHome);
        noHover(lblNovoIcon, lblNovo);

        //Limpa Jpanel para colocar outro
        pnlCalendar.removeAll();
        pnlCalendar.revalidate();
        pnlCalendar.repaint();

        try {
            //Coloca conteudo
            MudarPainel(Consulta.createNewConsulta(false, inicioDoMes, fimDoMes, "", ""));
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: \n" + ex, "Error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblConsultaIconMouseClicked

    private void lblConsultaIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultaIconMouseEntered
        yesHover(lblConsultaIcon, lblConsulta);
    }//GEN-LAST:event_lblConsultaIconMouseEntered

    private void lblConsultaIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultaIconMouseExited
        if (itemSelected.equals("consulta")) {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } else {
            noHover(lblConsultaIcon, lblConsulta);
        }
    }//GEN-LAST:event_lblConsultaIconMouseExited

    private void lblConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultaMouseClicked
        try {
            itemSelected = "consulta";
            noHover(lblHomeIcon, lblHome);
            noHover(lblNovoIcon, lblNovo);

            //Limpa Jpanel para colocar outro
            pnlCalendar.removeAll();
            pnlCalendar.revalidate();
            pnlCalendar.repaint();

            //Coloca conteudo
            MudarPainel(Consulta.createNewConsulta(false, inicioDoMes, fimDoMes, "", ""));
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: \n" + ex, "Error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblConsultaMouseClicked

    private void lblConsultaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultaMouseEntered
        yesHover(lblConsultaIcon, lblConsulta);
    }//GEN-LAST:event_lblConsultaMouseEntered

    private void lblConsultaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultaMouseExited
        if (itemSelected.equals("consulta")) {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } else {
            noHover(lblConsultaIcon, lblConsulta);
        }
    }//GEN-LAST:event_lblConsultaMouseExited

    //Side Menu - Novo
    private void lblNovoIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNovoIconMouseClicked
        try {
            itemSelected = "novo";
            noHover(lblHomeIcon, lblHome);
            noHover(lblConsultaIcon, lblConsulta);

            //Limpa Jpanel para colocar outro
            pnlCalendar.removeAll();
            pnlCalendar.revalidate();
            pnlCalendar.repaint();

            //Coloca conteudo
            MudarPainel(createNewClient());
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: \n" + ex, "Error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblNovoIconMouseClicked

    private void lblNovoIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNovoIconMouseEntered
        yesHover(lblNovoIcon, lblNovo);
    }//GEN-LAST:event_lblNovoIconMouseEntered

    private void lblNovoIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNovoIconMouseExited
        if (itemSelected.equals("novo")) {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } else {
            noHover(lblNovoIcon, lblNovo);
        }
    }//GEN-LAST:event_lblNovoIconMouseExited

    private void lblNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNovoMouseClicked
        try {
            itemSelected = "novo";
            noHover(lblHomeIcon, lblHome);
            noHover(lblConsultaIcon, lblConsulta);

            //Limpa Jpanel para colocar outro
            pnlCalendar.removeAll();
            pnlCalendar.revalidate();
            pnlCalendar.repaint();

            //Coloca conteudo
            MudarPainel(createNewClient());
        } catch (ParseException | SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: \n" + ex, "Error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblNovoMouseClicked

    private void lblNovoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNovoMouseEntered
        yesHover(lblNovoIcon, lblNovo);
    }//GEN-LAST:event_lblNovoMouseEntered

    private void lblNovoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNovoMouseExited
        if (itemSelected.equals("novo")) {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        } else {
            noHover(lblNovoIcon, lblNovo);
        }
    }//GEN-LAST:event_lblNovoMouseExited

    //Side Menu - Sair
    private void lblExitIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitIconMouseClicked
        if (JOptionPane.showConfirmDialog(
                this,
                "Deseja volta na tela de login ?", "Atenção",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            this.dispose();
            FrmLogin frmLogin = new FrmLogin();
            frmLogin.dispose();
            frmLogin.setSize(900, 600);
            frmLogin.setUndecorated(true);
            frmLogin.setVisible(true);
        }
    }//GEN-LAST:event_lblExitIconMouseClicked

    private void lblExitIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitIconMouseEntered
        yesHover(lblExitIcon, lblExit);
    }//GEN-LAST:event_lblExitIconMouseEntered

    private void lblExitIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitIconMouseExited
        noHover(lblExitIcon, lblExit);
    }//GEN-LAST:event_lblExitIconMouseExited

    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked
        if (JOptionPane.showConfirmDialog(
                this,
                "Deseja volta na tela de login ?", "Atenção",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            this.dispose();
            FrmLogin frmLogin = new FrmLogin();
            frmLogin.dispose();
            frmLogin.setSize(900, 600);
            frmLogin.setUndecorated(true);
            frmLogin.setVisible(true);
        }
    }//GEN-LAST:event_lblExitMouseClicked

    private void lblExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseEntered
        yesHover(lblExitIcon, lblExit);
    }//GEN-LAST:event_lblExitMouseEntered

    private void lblExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseExited
        noHover(lblExitIcon, lblExit);
    }//GEN-LAST:event_lblExitMouseExited

    private void lblBackupIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackupIconMouseEntered
        yesHover(lblBackupIcon, lblBackup);
    }//GEN-LAST:event_lblBackupIconMouseEntered

    private void lblBackupIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackupIconMouseExited
        noHover(lblBackupIcon, lblBackup);
    }//GEN-LAST:event_lblBackupIconMouseExited

    private void lblBackupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackupMouseClicked
        try {
            DaoFuncionario dao = new DaoFuncionario();
            if (!dao.backup()) {
                JOptionPane.showMessageDialog(
                        null,
                        "Backup realizado com sucesso, salvo em: \n"
                        + "C:\\Program Files\\Microsoft SQL Server\\MSSQL15.SQLEXPRESS\\MSSQL\\Backup\\db_deliciapet.bak",
                        "Sucesso: ",
                        JOptionPane.INFORMATION_MESSAGE
                );
            } else {
                JOptionPane.showMessageDialog(
                        null, 
                        "Não foi possível realizar o backup\n"
                        + "Tente novamente", 
                        "Ops...", 
                        JOptionPane.WARNING_MESSAGE
                );
            }
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: \n" + ex, "Error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblBackupMouseClicked

    private void lblBackupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackupMouseEntered
        yesHover(lblBackupIcon, lblBackup);
    }//GEN-LAST:event_lblBackupMouseEntered

    private void lblBackupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackupMouseExited
        noHover(lblBackupIcon, lblBackup);
    }//GEN-LAST:event_lblBackupMouseExited

    private void lblBackupIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackupIconMouseClicked
        try {
            DaoFuncionario dao = new DaoFuncionario();
            if (!dao.backup()) {
                JOptionPane.showMessageDialog(
                        null,
                        "Backup realizado com sucesso, salvo em: \n"
                        + "C:\\Program Files\\Microsoft SQL Server\\MSSQL15.SQLEXPRESS\\MSSQL\\Backup\\db_deliciapet.bak",
                        "Sucesso: ",
                        JOptionPane.INFORMATION_MESSAGE
                );
            } else {
                JOptionPane.showMessageDialog(
                        null, 
                        "Não foi possível realizar o backup\n"
                        + "Tente novamente", 
                        "Ops...", 
                        JOptionPane.WARNING_MESSAGE
                );
            }
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: \n" + ex, "Error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblBackupIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());

                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane jlpPaneis;
    private javax.swing.JLabel lblBackup;
    private javax.swing.JLabel lblBackupIcon;
    private javax.swing.JLabel lblConsulta;
    private javax.swing.JLabel lblConsultaIcon;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblExitIcon;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblHomeIcon;
    private javax.swing.JLabel lblNovo;
    private javax.swing.JLabel lblNovoIcon;
    private javax.swing.JLabel lblUserPhoto;
    private javax.swing.JLabel lbl_Canto_Icon;
    private javax.swing.JSeparator linha;
    private javax.swing.JPanel pnlCalendar;
    private javax.swing.JPanel pnlOption;
    private javax.swing.JPanel pnl_Canto_Direito;
    private javax.swing.JPanel pnl_Fundo;
    // End of variables declaration//GEN-END:variables
}
